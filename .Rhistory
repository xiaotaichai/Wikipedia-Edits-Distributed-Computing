knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(here)
all.revisions.1000.path <- here("all_revisions_1000_articles.txt")
?read.table
all.revisions.1000.path <- here("all_revisions_1000_articles.txt",)
all.revisions.1000.path <- here("all_revisions_1000_articles.txt")
read.table(all.revisions.1000.path, sep = "<<sep>>")
system("sed 's/<<sep>>/,/g' all_revisions_100_articles.txt > all_revisions_100_articles_commaseparated.txt")
system("sed 's/<<sep>>/,/g' all_revisions_1000_articles.txt > all_revisions_1000_articles_commaseparated.txt")
revisions <- read.table(all.revisions.1000.path, sep = ",")
head(revisions)
all.revisions.1000.path <- here("all_revisions_1000_articles_commaseparated.txt")
revisions <- read.table(all.revisions.1000.path, sep = ",")
revisions <- read.table(all.revisions.1000.path, sep = ",", fill=TRUE)
head(revisions)
View(revisions)
View(revisions)
git add .
colnames(revisions) <- c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA")
tail(revisions)
str(revisions)
knitr::opts_chunk$set(echo = TRUE)
revisions.z <- do.call(rbind,strsplit(readLines("all_revisions_1000_articles.txt"), "<<sep>>",fixed=T))
head(revisions.z)
revisions_processed <-
setNames(
as.data.frame(lapply(1:ncol(revisions.z), function (i) {
type.convert(revisions.z[,i], as.is = TRUE)
}), stringsAsFactors = FALSE),
c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA")
)
# library(tidyr)
# revisions_processed <- separate(data = revisions_processed, col = timestamp, into = c('date', 'time'), sep = "T")
# str(revisions_processed)
# head(revisions_processed)
?separate
# library(tidyr)
revisions_processed <- separate(data = revisions_processed, col = timestamp, into = c('date', 'time'), sep = "T")
library(tidyr)
revisions_processed <- separate(data = revisions_processed, col = timestamp, into = c('date', 'time'), sep = "T")
str(revisions_processed)
head(revisions_processed)
class(revisions)
class(revisions_processed)
View(revisions_processed)
View(revisions_processed)
?read.table
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
install_load(plotly)
?install_load
install.packages("plotly")
install.packages("ggplotly")
?ggplotly
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(here)
all.revisions.1000.path <- here("all_revisions_1000_articles_caratseparated.txt")
revisions <- read.table(all.revisions.1000.path,
sep = "^",
quote="",
header=FALSE,
col.names = c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA"),
fill=TRUE)
# head(revisions)
colnames(revisions) <- c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA")
tail(revisions)
install.packages(c("bindrcpp", "broom", "car", "cluster", "curl", "datetime", "janitor", "kableExtra", "lme4", "lmtest", "mapproj", "maps", "Matrix", "plogr", "psych", "selectr", "servr", "viridis"))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(here)
all.revisions.1000.path <- here("all_revisions_1000_articles_caratseparated.txt")
revisions <- read.table(all.revisions.1000.path,
sep = "^",
quote="",
header=FALSE,
col.names = c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA"),
fill=TRUE)
# head(revisions)
colnames(revisions) <- c("article_id", "rev_id", "article_title", "timestamp", "[ip:]username", "user_id", "CATEGORY", "IMAGE", "MAIN", "TALK", "USER", "USER_TALK", "OTHER", "EXTERNAL",
"TEMPLATE", "COMMENT", "MINOR", "TEXTDATA")
tail(revisions)
devtools::install_github('yihui/xaringan')
xaringan:::inf_mr()
install.packages('leaflet')
?here
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(here)
library(tidyverse)
library(plotly)
library(janitor)
library(lubridate)
library(zoo)
?here
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages("evaluate")
install.packages("evaluate")
ggplotly(p)
xaringan:::inf_mr()
install.packages("webshot")
